
# parser_ProductParser_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'C21584DCED68646468BC34AEAC79C521'
    
_lr_action_items = {'PRODUCT':([0,],[1,]),'MEGAPIXELS':([10,12,],[19,22,]),'SEP':([1,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[-3,-8,-12,-17,-6,-19,-11,20,-10,-18,-16,-9,-15,-7,-8,-14,-8,-4,-13,20,-5,]),'COLOR':([1,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[-3,7,-12,-17,-6,-19,-11,7,-10,-18,-16,-9,-15,-7,7,-14,7,-4,-13,7,-5,]),'LOCK':([1,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[-3,13,-12,-17,-6,-19,-11,13,-10,-18,-16,-9,-15,-7,13,-14,13,-4,-13,13,-5,]),'BRAND':([1,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[3,9,-12,-17,-6,-19,-11,9,-10,-18,-16,-9,-15,-7,9,-14,9,-4,-13,9,-5,]),'FLOAT':([1,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[-3,10,-12,-17,-6,-19,-11,10,-10,-18,-16,-9,-15,-7,10,-14,10,-4,-13,10,-5,]),'NUMBER':([1,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[-3,12,-12,-17,-6,-19,-11,12,-10,-18,-16,-9,-15,-7,12,-14,12,-4,-13,12,-5,]),'NUMCHIP':([1,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[-3,14,-12,-17,-6,-19,-11,14,-10,-18,-16,-9,-15,-7,14,-14,14,-4,-13,14,-5,]),'ATTRIB':([1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[-3,5,15,18,-12,-17,-6,-19,-11,15,-10,-18,-16,-9,-15,-7,15,-14,15,-4,-13,15,-5,]),'TECHNOLOGY':([1,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[-3,16,-12,-17,-6,-19,-11,16,-10,-18,-16,-9,-15,-7,16,-14,16,-4,-13,16,-5,]),'$end':([1,2,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[-3,0,-8,-12,-17,-6,-19,-11,-1,-10,-18,-16,-9,-15,-7,-8,-14,-8,-4,-13,-2,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'product_id':([1,],[4,]),'camera_resolution':([4,11,18,20,23,],[6,6,6,6,6,]),'attribute':([4,11,18,20,23,],[8,21,8,24,21,]),'attribute_list':([4,18,],[11,23,]),'statement':([0,],[2,]),'empty':([4,11,18,20,23,],[17,17,17,17,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> PRODUCT product_id attribute_list','statement',3,'p_statement','parser.py',123),
  ('product_id -> BRAND ATTRIB ATTRIB attribute_list','product_id',4,'p_product_id','parser.py',133),
  ('product_id -> <empty>','product_id',0,'p_product_id','parser.py',134),
  ('attribute_list -> attribute_list attribute','attribute_list',2,'p_attribute_list','parser.py',149),
  ('attribute_list -> attribute_list SEP attribute','attribute_list',3,'p_attribute_list','parser.py',150),
  ('attribute_list -> attribute','attribute_list',1,'p_attribute_list','parser.py',151),
  ('attribute -> empty','attribute',1,'p_attribute_empty','parser.py',167),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',172),
  ('attribute -> ATTRIB','attribute',1,'p_attribute_name','parser.py',177),
  ('attribute -> NUMBER','attribute',1,'p_attribute_number_rep','parser.py',184),
  ('attribute -> FLOAT','attribute',1,'p_attribute_number_rep','parser.py',185),
  ('attribute -> camera_resolution','attribute',1,'p_attribute_camera','parser.py',191),
  ('camera_resolution -> NUMBER MEGAPIXELS','camera_resolution',2,'p_attribute_camera_resolution','parser.py',197),
  ('camera_resolution -> FLOAT MEGAPIXELS','camera_resolution',2,'p_attribute_camera_resolution','parser.py',198),
  ('attribute -> TECHNOLOGY','attribute',1,'p_attribute_tech','parser.py',204),
  ('attribute -> NUMCHIP','attribute',1,'p_attribute_numchip','parser.py',210),
  ('attribute -> COLOR','attribute',1,'p_attribute_color','parser.py',216),
  ('attribute -> LOCK','attribute',1,'p_attribute_lock','parser.py',222),
  ('attribute -> BRAND','attribute',1,'p_attribute_brand','parser.py',229),
]
